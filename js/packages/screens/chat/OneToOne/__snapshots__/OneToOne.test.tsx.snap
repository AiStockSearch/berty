// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Chat.OneToOne renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      onLayout={[Function]}
      style={
        Array [
          Array [
            Object {
              "backgroundColor": "#FFFFFF",
              "flex": 1,
            },
          ],
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "#FFFFFF",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "flex": 1,
              }
            }
          >
            <RCTScrollView
              ListFooterComponent={
                <NoopComponent
                  accountMemberPublicKey="5cf2bc99-2721-407d-992b-a00fbdf302f2"
                  contactPublicKey="06048962-04f5-4371-8936-8f970d9a2710"
                  createdDate="1604951594194"
                  isOpen={false}
                  lastUpdate="1610898041307"
                  mutedUntil={
                    Long {
                      "high": 0,
                      "low": 0,
                      "unsigned": false,
                    }
                  }
                  publicKey="fff9c640-13a3-47a1-97d0-2e642ac46838"
                  type="ContactType"
                  unreadCount={46}
                />
              }
              contentContainerStyle={
                Object {
                  "backgroundColor": "#FFFFFF",
                  "paddingBottom": 35,
                }
              }
              data={Array []}
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={20}
              invertStickyHeaders={true}
              inverted={true}
              keyExtractor={[Function]}
              keyboardDismissMode="on-drag"
              maxToRenderPerBatch={10}
              onContentSizeChange={[Function]}
              onEndReached={[Function]}
              onEndReachedThreshold={3}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              onScrollToIndexFailed={[Function]}
              overScrollMode="never"
              refreshing={false}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={50}
              stickyHeaderIndices={Array []}
              style={
                Array [
                  Object {
                    "transform": Array [
                      Object {
                        "scaleY": -1,
                      },
                    ],
                  },
                  Array [
                    Object {
                      "overflow": "visible",
                    },
                    Object {
                      "alignSelf": "stretch",
                    },
                    Object {
                      "flex": 1,
                    },
                  ],
                ]
              }
              updateCellsBatchingPeriod={50}
              viewabilityConfigCallbackPairs={Array []}
              windowSize={21}
            >
              <View>
                <View
                  onLayout={[Function]}
                  style={
                    Object {
                      "transform": Array [
                        Object {
                          "scaleY": -1,
                        },
                      ],
                    }
                  }
                />
              </View>
            </RCTScrollView>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#FFFFFF",
              }
            }
          >
            <View
              style={
                Object {
                  "position": "relative",
                  "transform": Array [
                    Object {
                      "translateY": 1000,
                    },
                  ],
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "borderTopLeftRadius": 24,
                      "borderTopRightRadius": 24,
                    },
                    Object {
                      "shadowOffset": Object {
                        "height": 4,
                        "width": 0,
                      },
                      "shadowOpacity": 0.2,
                      "shadowRadius": 8,
                    },
                    Object {
                      "paddingTop": 16,
                    },
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "bottom": 0,
                      "elevation": 20,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "shadowColor": "#000000",
                    },
                  ]
                }
              >
                <View
                  onLayout={[Function]}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "paddingHorizontal": 16,
                        },
                        Object {
                          "alignItems": "flex-start",
                          "backgroundColor": "#FFFFFF",
                          "flexDirection": "row",
                          "height": 40,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "fontSize": 30,
                            },
                            Object {
                              "color": "#383B62",
                              "fontFamily": "Open Sans",
                            },
                            Array [
                              Object {
                                "fontFamily": "Bold Open Sans",
                              },
                            ],
                          ]
                        }
                      >
                        chat.emojis.matching
                      </Text>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "padding": 4,
                          },
                          Object {
                            "borderRadius": 16,
                          },
                          Object {
                            "backgroundColor": "#535AE4",
                          },
                        ]
                      }
                    />
                  </View>
                  <View
                    appearance="default"
                    style={
                      Array [
                        Object {
                          "backgroundColor": "#EDF1F7",
                          "height": 1,
                        },
                        Object {
                          "backgroundColor": "#535AE430",
                        },
                      ]
                    }
                  />
                </View>
                <RCTScrollView
                  data={Array []}
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  keyboardShouldPersistTaps="always"
                  maxToRenderPerBatch={10}
                  nestedScrollEnabled={true}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  persistentScrollbar={true}
                  removeClippedSubviews={true}
                  renderItem={[Function]}
                  scrollEventThrottle={0.0001}
                  stickyHeaderIndices={Array []}
                  style={
                    Object {
                      "height": 0,
                    }
                  }
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View />
                </RCTScrollView>
              </View>
            </View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFFFFF",
                  "justifyContent": "flex-end",
                  "minHeight": 65,
                  "paddingBottom": 18,
                  "paddingLeft": 10,
                  "paddingTop": 10,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "flexDirection": "row",
                    },
                  ]
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "paddingLeft": 10,
                      },
                      Object {
                        "flex": 1,
                      },
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "marginRight": 8,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "#F7F8FF",
                            "borderRadius": 9,
                            "height": 36,
                            "justifyContent": "center",
                            "opacity": 1,
                            "padding": 9,
                            "width": 36,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "transform": Array [
                                Object {
                                  "scale": 1,
                                },
                              ],
                            }
                          }
                        >
                          <RNSVGMock
                            fill="#979797"
                            height={26}
                            viewBox="0 0 24 24"
                            width={26}
                          />
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        Array [
                          Object {
                            "flex": 1,
                          },
                          Object {
                            "borderRadius": 16,
                          },
                          Object {
                            "padding": 12,
                            "paddingHorizontal": undefined,
                            "paddingTop": 7,
                          },
                          Object {
                            "backgroundColor": "#CED2FF70",
                          },
                        ]
                      }
                    >
                      <TextInput
                        allowFontScaling={true}
                        blurOnSubmit={false}
                        editable={true}
                        multiline={true}
                        onBlur={[Function]}
                        onChangeText={[Function]}
                        onFocus={[Function]}
                        onSelectionChange={[Function]}
                        onSubmitEditing={[Function]}
                        placeholder="chat.one-to-one.input-placeholder"
                        placeholderTextColor="#979797"
                        rejectResponderTermination={true}
                        returnKeyType="default"
                        style={
                          Array [
                            Object {
                              "fontFamily": "Light Open Sans",
                            },
                            Object {
                              "fontFamily": "Open Sans",
                              "maxHeight": 150,
                            },
                            Object {
                              "color": "#383B62",
                            },
                          ]
                        }
                        underlineColorAndroid="transparent"
                        value=""
                      />
                    </View>
                    <View
                      style={
                        Object {
                          "marginLeft": 8,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "marginRight": 8,
                          }
                        }
                      >
                        <View
                          accessible={true}
                          focusable={true}
                          onClick={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderRelease={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "#535AE4",
                              "borderRadius": 18,
                              "height": 36,
                              "justifyContent": "center",
                              "opacity": 1,
                              "width": 36,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "paddingBottom": 1.5,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "transform": Array [
                                    Object {
                                      "scale": 1,
                                    },
                                  ],
                                }
                              }
                            >
                              <AssetMock
                                color="#FFFFFF"
                                height={15.84}
                                style={Array []}
                                width={15.84}
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
