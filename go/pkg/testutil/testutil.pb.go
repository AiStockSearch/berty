// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: go-internal/testutil.proto

package testutil

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type EchoTest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoTest) Reset()         { *m = EchoTest{} }
func (m *EchoTest) String() string { return proto.CompactTextString(m) }
func (*EchoTest) ProtoMessage()    {}
func (*EchoTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2d367dd7245dca, []int{0}
}
func (m *EchoTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoTest.Unmarshal(m, b)
}
func (m *EchoTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoTest.Marshal(b, m, deterministic)
}
func (m *EchoTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoTest.Merge(m, src)
}
func (m *EchoTest) XXX_Size() int {
	return xxx_messageInfo_EchoTest.Size(m)
}
func (m *EchoTest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoTest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoTest proto.InternalMessageInfo

type EchoTest_Request struct {
	Delay                uint64   `protobuf:"varint,1,opt,name=delay,proto3" json:"delay,omitempty"`
	Echo                 string   `protobuf:"bytes,2,opt,name=echo,proto3" json:"echo,omitempty"`
	TriggerError         bool     `protobuf:"varint,3,opt,name=trigger_error,json=triggerError,proto3" json:"trigger_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoTest_Request) Reset()         { *m = EchoTest_Request{} }
func (m *EchoTest_Request) String() string { return proto.CompactTextString(m) }
func (*EchoTest_Request) ProtoMessage()    {}
func (*EchoTest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2d367dd7245dca, []int{0, 0}
}
func (m *EchoTest_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoTest_Request.Unmarshal(m, b)
}
func (m *EchoTest_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoTest_Request.Marshal(b, m, deterministic)
}
func (m *EchoTest_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoTest_Request.Merge(m, src)
}
func (m *EchoTest_Request) XXX_Size() int {
	return xxx_messageInfo_EchoTest_Request.Size(m)
}
func (m *EchoTest_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoTest_Request.DiscardUnknown(m)
}

var xxx_messageInfo_EchoTest_Request proto.InternalMessageInfo

func (m *EchoTest_Request) GetDelay() uint64 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *EchoTest_Request) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func (m *EchoTest_Request) GetTriggerError() bool {
	if m != nil {
		return m.TriggerError
	}
	return false
}

type EchoTest_Reply struct {
	Echo                 string   `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoTest_Reply) Reset()         { *m = EchoTest_Reply{} }
func (m *EchoTest_Reply) String() string { return proto.CompactTextString(m) }
func (*EchoTest_Reply) ProtoMessage()    {}
func (*EchoTest_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2d367dd7245dca, []int{0, 1}
}
func (m *EchoTest_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoTest_Reply.Unmarshal(m, b)
}
func (m *EchoTest_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoTest_Reply.Marshal(b, m, deterministic)
}
func (m *EchoTest_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoTest_Reply.Merge(m, src)
}
func (m *EchoTest_Reply) XXX_Size() int {
	return xxx_messageInfo_EchoTest_Reply.Size(m)
}
func (m *EchoTest_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoTest_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_EchoTest_Reply proto.InternalMessageInfo

func (m *EchoTest_Reply) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

type EchoStreamTest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoStreamTest) Reset()         { *m = EchoStreamTest{} }
func (m *EchoStreamTest) String() string { return proto.CompactTextString(m) }
func (*EchoStreamTest) ProtoMessage()    {}
func (*EchoStreamTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2d367dd7245dca, []int{1}
}
func (m *EchoStreamTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoStreamTest.Unmarshal(m, b)
}
func (m *EchoStreamTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoStreamTest.Marshal(b, m, deterministic)
}
func (m *EchoStreamTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoStreamTest.Merge(m, src)
}
func (m *EchoStreamTest) XXX_Size() int {
	return xxx_messageInfo_EchoStreamTest.Size(m)
}
func (m *EchoStreamTest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoStreamTest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoStreamTest proto.InternalMessageInfo

type EchoStreamTest_Request struct {
	Delay                uint64   `protobuf:"varint,1,opt,name=delay,proto3" json:"delay,omitempty"`
	Echo                 string   `protobuf:"bytes,2,opt,name=echo,proto3" json:"echo,omitempty"`
	TriggerError         bool     `protobuf:"varint,3,opt,name=trigger_error,json=triggerError,proto3" json:"trigger_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoStreamTest_Request) Reset()         { *m = EchoStreamTest_Request{} }
func (m *EchoStreamTest_Request) String() string { return proto.CompactTextString(m) }
func (*EchoStreamTest_Request) ProtoMessage()    {}
func (*EchoStreamTest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2d367dd7245dca, []int{1, 0}
}
func (m *EchoStreamTest_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoStreamTest_Request.Unmarshal(m, b)
}
func (m *EchoStreamTest_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoStreamTest_Request.Marshal(b, m, deterministic)
}
func (m *EchoStreamTest_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoStreamTest_Request.Merge(m, src)
}
func (m *EchoStreamTest_Request) XXX_Size() int {
	return xxx_messageInfo_EchoStreamTest_Request.Size(m)
}
func (m *EchoStreamTest_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoStreamTest_Request.DiscardUnknown(m)
}

var xxx_messageInfo_EchoStreamTest_Request proto.InternalMessageInfo

func (m *EchoStreamTest_Request) GetDelay() uint64 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *EchoStreamTest_Request) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func (m *EchoStreamTest_Request) GetTriggerError() bool {
	if m != nil {
		return m.TriggerError
	}
	return false
}

type EchoStreamTest_Reply struct {
	Echo                 string   `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoStreamTest_Reply) Reset()         { *m = EchoStreamTest_Reply{} }
func (m *EchoStreamTest_Reply) String() string { return proto.CompactTextString(m) }
func (*EchoStreamTest_Reply) ProtoMessage()    {}
func (*EchoStreamTest_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2d367dd7245dca, []int{1, 1}
}
func (m *EchoStreamTest_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoStreamTest_Reply.Unmarshal(m, b)
}
func (m *EchoStreamTest_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoStreamTest_Reply.Marshal(b, m, deterministic)
}
func (m *EchoStreamTest_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoStreamTest_Reply.Merge(m, src)
}
func (m *EchoStreamTest_Reply) XXX_Size() int {
	return xxx_messageInfo_EchoStreamTest_Reply.Size(m)
}
func (m *EchoStreamTest_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoStreamTest_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_EchoStreamTest_Reply proto.InternalMessageInfo

func (m *EchoStreamTest_Reply) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

type EchoDuplexTest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoDuplexTest) Reset()         { *m = EchoDuplexTest{} }
func (m *EchoDuplexTest) String() string { return proto.CompactTextString(m) }
func (*EchoDuplexTest) ProtoMessage()    {}
func (*EchoDuplexTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2d367dd7245dca, []int{2}
}
func (m *EchoDuplexTest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoDuplexTest.Unmarshal(m, b)
}
func (m *EchoDuplexTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoDuplexTest.Marshal(b, m, deterministic)
}
func (m *EchoDuplexTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoDuplexTest.Merge(m, src)
}
func (m *EchoDuplexTest) XXX_Size() int {
	return xxx_messageInfo_EchoDuplexTest.Size(m)
}
func (m *EchoDuplexTest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoDuplexTest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoDuplexTest proto.InternalMessageInfo

type EchoDuplexTest_Request struct {
	Echo                 string   `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
	TriggerError         bool     `protobuf:"varint,2,opt,name=trigger_error,json=triggerError,proto3" json:"trigger_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoDuplexTest_Request) Reset()         { *m = EchoDuplexTest_Request{} }
func (m *EchoDuplexTest_Request) String() string { return proto.CompactTextString(m) }
func (*EchoDuplexTest_Request) ProtoMessage()    {}
func (*EchoDuplexTest_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2d367dd7245dca, []int{2, 0}
}
func (m *EchoDuplexTest_Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoDuplexTest_Request.Unmarshal(m, b)
}
func (m *EchoDuplexTest_Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoDuplexTest_Request.Marshal(b, m, deterministic)
}
func (m *EchoDuplexTest_Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoDuplexTest_Request.Merge(m, src)
}
func (m *EchoDuplexTest_Request) XXX_Size() int {
	return xxx_messageInfo_EchoDuplexTest_Request.Size(m)
}
func (m *EchoDuplexTest_Request) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoDuplexTest_Request.DiscardUnknown(m)
}

var xxx_messageInfo_EchoDuplexTest_Request proto.InternalMessageInfo

func (m *EchoDuplexTest_Request) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func (m *EchoDuplexTest_Request) GetTriggerError() bool {
	if m != nil {
		return m.TriggerError
	}
	return false
}

type EchoDuplexTest_Reply struct {
	Echo                 string   `protobuf:"bytes,1,opt,name=echo,proto3" json:"echo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoDuplexTest_Reply) Reset()         { *m = EchoDuplexTest_Reply{} }
func (m *EchoDuplexTest_Reply) String() string { return proto.CompactTextString(m) }
func (*EchoDuplexTest_Reply) ProtoMessage()    {}
func (*EchoDuplexTest_Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a2d367dd7245dca, []int{2, 1}
}
func (m *EchoDuplexTest_Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoDuplexTest_Reply.Unmarshal(m, b)
}
func (m *EchoDuplexTest_Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoDuplexTest_Reply.Marshal(b, m, deterministic)
}
func (m *EchoDuplexTest_Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoDuplexTest_Reply.Merge(m, src)
}
func (m *EchoDuplexTest_Reply) XXX_Size() int {
	return xxx_messageInfo_EchoDuplexTest_Reply.Size(m)
}
func (m *EchoDuplexTest_Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoDuplexTest_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_EchoDuplexTest_Reply proto.InternalMessageInfo

func (m *EchoDuplexTest_Reply) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func init() {
	proto.RegisterType((*EchoTest)(nil), "testutil.EchoTest")
	proto.RegisterType((*EchoTest_Request)(nil), "testutil.EchoTest.Request")
	proto.RegisterType((*EchoTest_Reply)(nil), "testutil.EchoTest.Reply")
	proto.RegisterType((*EchoStreamTest)(nil), "testutil.EchoStreamTest")
	proto.RegisterType((*EchoStreamTest_Request)(nil), "testutil.EchoStreamTest.Request")
	proto.RegisterType((*EchoStreamTest_Reply)(nil), "testutil.EchoStreamTest.Reply")
	proto.RegisterType((*EchoDuplexTest)(nil), "testutil.EchoDuplexTest")
	proto.RegisterType((*EchoDuplexTest_Request)(nil), "testutil.EchoDuplexTest.Request")
	proto.RegisterType((*EchoDuplexTest_Reply)(nil), "testutil.EchoDuplexTest.Reply")
}

func init() { proto.RegisterFile("go-internal/testutil.proto", fileDescriptor_0a2d367dd7245dca) }

var fileDescriptor_0a2d367dd7245dca = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x92, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc7, 0x99, 0xda, 0x6a, 0x5c, 0x3f, 0x0e, 0x8b, 0x87, 0x10, 0x41, 0x42, 0xbc, 0xe4, 0x62,
	0x52, 0xf4, 0x05, 0xa4, 0xd8, 0x17, 0x48, 0x8b, 0x88, 0x17, 0x49, 0xe3, 0x90, 0x04, 0xd7, 0xee,
	0x76, 0x33, 0x11, 0x73, 0xf4, 0xe4, 0x53, 0x0b, 0x92, 0xb4, 0xcd, 0xd2, 0x58, 0x05, 0x4f, 0xbd,
	0xed, 0x7c, 0xec, 0xff, 0xff, 0x63, 0x66, 0x98, 0x93, 0xca, 0xab, 0x7c, 0x4e, 0xa8, 0xe7, 0xb1,
	0x08, 0x09, 0x0b, 0x2a, 0x29, 0x17, 0x81, 0xd2, 0x92, 0x24, 0xb7, 0xd6, 0xb1, 0xf7, 0x01, 0xcc,
	0x1a, 0x27, 0x99, 0x9c, 0x62, 0x41, 0xce, 0x03, 0x3b, 0x88, 0x70, 0x51, 0x62, 0x41, 0xfc, 0x8c,
	0x0d, 0x9e, 0x51, 0xc4, 0x95, 0x0d, 0x2e, 0xf8, 0xfd, 0x68, 0x19, 0x70, 0xce, 0xfa, 0x98, 0x64,
	0xd2, 0xee, 0xb9, 0xe0, 0x1f, 0x46, 0xcd, 0x9b, 0x5f, 0xb2, 0x13, 0xd2, 0x79, 0x9a, 0xa2, 0x7e,
	0x42, 0xad, 0xa5, 0xb6, 0xf7, 0x5c, 0xf0, 0xad, 0xe8, 0x78, 0x95, 0x1c, 0xd7, 0x39, 0xe7, 0x9c,
	0x0d, 0x22, 0x54, 0xc2, 0x28, 0x80, 0x51, 0xf0, 0x3e, 0x81, 0x9d, 0xd6, 0x0c, 0x13, 0xd2, 0x18,
	0xbf, 0xee, 0x92, 0x64, 0xb1, 0x04, 0xb9, 0x2b, 0x95, 0xc0, 0xf7, 0x06, 0x64, 0x64, 0x40, 0xb6,
	0x7c, 0xf8, 0x69, 0xd9, 0xfb, 0xa7, 0xe5, 0xf5, 0x17, 0xb0, 0xa3, 0xda, 0x69, 0x82, 0xfa, 0x2d,
	0x4f, 0x90, 0xdf, 0x9a, 0x7d, 0x70, 0x27, 0x68, 0xf7, 0xb6, 0xce, 0x05, 0x2b, 0x1a, 0xc7, 0xde,
	0x5a, 0xab, 0x5d, 0xa6, 0xdd, 0x69, 0x72, 0x77, 0xb3, 0xd7, 0x54, 0x5a, 0xb5, 0x8b, 0x3f, 0x3a,
	0x94, 0xa8, 0x86, 0xc0, 0xef, 0xbb, 0xa3, 0xe9, 0xaa, 0x9a, 0xca, 0x6f, 0xaa, 0x1b, 0x1d, 0x4a,
	0x54, 0x3e, 0x0c, 0x61, 0xe4, 0x3d, 0xba, 0x33, 0xd4, 0x54, 0x05, 0x84, 0x49, 0x16, 0x36, 0xcf,
	0x30, 0x95, 0xa1, 0x7a, 0x49, 0xdb, 0xa3, 0x9d, 0xed, 0x37, 0x57, 0x7b, 0xf3, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0x35, 0xdc, 0x32, 0xef, 0xd3, 0x02, 0x00, 0x00,
}
